{
  "name": "Bayesian2afc",
  "tagline": "Vincent, B. T. (2015) A tutorial on Bayesian models of Perception, Journal of Mathematical Psychology. ",
  "body": "# A tutorial on Bayesian models of perception\r\n\r\nThis repository contains Matlab code associated with the paper:\r\n\r\n> Vincent (2015) [A tutorial on Bayesian models of Perception](http://www.sciencedirect.com/science/article/pii/S0022249615000061), Journal of Mathematical Psychology. do:10.1016/j.jmp.2015.02.001\r\n\r\nIf you find the paper and/or code useful, the best way to thank me is by citing me :) \r\n\r\n**This code is published under the MIT licence, see LICENSE.txt.**\r\n\r\n\r\n## If... then...\r\n* **You can't get the code to work**, then feel free to email and I'll try my best to respond to clarify things. \r\n\r\n* **You want to use the code for learning alongside the paper**, then feel free to clone or fork this repository, or download a .zip of the code.\r\n\r\n* **If you find a bug**, then:\r\n\t* create an Issue, or...\r\n\t* create a pull request through GitHub with fixed code :)\r\n\r\n* If you find the paper useful in your academic work, or adapt any of the code for your own work, please to share the love and cite the paper.\r\n\r\n## Subdirectories\r\n\r\n* `~` the root directory contains the main Matlab scripts and functions for producing the figures, see the section below.\r\n* `figs/` output of the code saved in .fig and .pdf format.\r\n* `funcs/` contains the majority of the Matlab functions and JAGS model files. You don't need to run any of these files as they are called by the main scripts in the root directory.\r\n* `output/` data generated by the code is saved here.\r\n\r\n## Reproducing the figures\r\n\r\n* `generate_common_data.m` generates and saves a set of common data which can be used with all of the models. There is no need to run this as example data is already included in the files `commondata_model*.mat`.\r\n* `model1runme.m` By changing the input variable `{'gridApprox', 'mcmcJAGS', 'mcmcCustom'}` this file will run the 3 inference steps using the different respective methods:\r\n\t*  `gridApprox` will conduct parameter estimation via grid approximation.\r\n\t*  `mcmcCustom` will conduct parameter estimation with an implementation of the Metropolis-Hastings sampling algorithm (see `mhAlgorithm.m`).\r\n\t*  `mcmcJAGS` will use the JAGS inference software to conduct parameter estimation using MCMC methods.\r\n* `model1MCMCse.m` runs a large simulation to study the variability in MCMC-derived estimates of an observers internal variance. Warning: this function can take days to run even on a fast multi-core machine with lots of RAM.\r\n* `model1MCMCconvergence`\r\n* `model2runme.m`\r\n* `model2psychometric`\r\n* `model3runme.m` \r\n\r\n\r\n## Options when running the code\r\n* If you have a computer with multiple CPU cores, then you can run the MCMC chains in parallel by setting `mcmcparams.doparallel = 1` in the file `/funcs/define_mcmcparams.m`. \r\n* You can elect to make inferences based upon the common dataset generated by the file `/generate_common_data.m` by setting `DATAMODE='load'`. Otherwise, new simulated observer behaviour can be generated by `DATAMODE='generate'`.\r\n\r\n## Dependencies\r\n* This code was generated and tested with **Matlab 2014a**.\r\n* The **Matlab Statistics Toolbox** is required for Stage 3 of Model 1, when using grid approximation.\r\n* Models using JAGS to make inferences require:\r\n\t* **JAGS**, which can be downloaded from [http://mcmc-jags.sourceforge.net](http://mcmc-jags.sourceforge.net)\r\n\t* **matjags.m** is included in `/funcs` and works with the code here. Updated versions may be found in the repository [https://github.com/msteyvers/matjags](https://github.com/msteyvers/matjags) but of course future changes may introduce incompatibilities.\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}